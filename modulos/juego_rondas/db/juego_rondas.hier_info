|juego_rondas
ram5 <= ram:inst12.q[5]
reset => generadorPulsos:inst34.reset
reset => juegoPorRondas:inst25.reset
reset => contador6bits:inst29.clr
reset => contador6bits:inst.clr
reset => contador3bits:inst6.aclr
reset => generadorPulsos:inst27.reset
clk => generadorPulsos:inst34.clock
clk => juegoPorRondas:inst25.clock
clk => ram:inst12.clock
clk => generadorPulsos:inst27.clock
aceptar => generadorPulsos:inst34.x
aceptar => inst1.IN0
aceptar => contador6bits:inst29.siguiente
aceptar => generadorPulsos:inst27.x
siguiente => contador6bits:inst.siguiente
siguiente => inst18.IN1
ram4 <= ram:inst12.q[4]
ram3 <= ram:inst12.q[3]
ram2 <= ram:inst12.q[2]
ram1 <= ram:inst12.q[1]
ram0 <= ram:inst12.q[0]
jug2 <= jug_actual[2].DB_MAX_OUTPUT_PORT_TYPE
jug1 <= jug_actual[1].DB_MAX_OUTPUT_PORT_TYPE
jug0 <= jug_actual[0].DB_MAX_OUTPUT_PORT_TYPE
ganador <= inst28.DB_MAX_OUTPUT_PORT_TYPE
numeros[0] <= multiplexor6bits:inst8.result[0]
numeros[1] <= multiplexor6bits:inst8.result[1]
numeros[2] <= multiplexor6bits:inst8.result[2]
numeros[3] <= multiplexor6bits:inst8.result[3]
numeros[4] <= multiplexor6bits:inst8.result[4]
numeros[5] <= multiplexor6bits:inst8.result[5]
palabras[0] <= mux2_4:inst7.result[0]
palabras[1] <= mux2_4:inst7.result[1]
palabras[2] <= mux2_4:inst7.result[2]
palabras[3] <= mux2_4:inst7.result[3]


|juego_rondas|ram:inst12
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
clock => altsyncram:altsyncram_component.clock0
data[0] => altsyncram:altsyncram_component.data_a[0]
data[1] => altsyncram:altsyncram_component.data_a[1]
data[2] => altsyncram:altsyncram_component.data_a[2]
data[3] => altsyncram:altsyncram_component.data_a[3]
data[4] => altsyncram:altsyncram_component.data_a[4]
data[5] => altsyncram:altsyncram_component.data_a[5]
wren => altsyncram:altsyncram_component.wren_a
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]


|juego_rondas|ram:inst12|altsyncram:altsyncram_component
wren_a => altsyncram_lsc1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_lsc1:auto_generated.data_a[0]
data_a[1] => altsyncram_lsc1:auto_generated.data_a[1]
data_a[2] => altsyncram_lsc1:auto_generated.data_a[2]
data_a[3] => altsyncram_lsc1:auto_generated.data_a[3]
data_a[4] => altsyncram_lsc1:auto_generated.data_a[4]
data_a[5] => altsyncram_lsc1:auto_generated.data_a[5]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_lsc1:auto_generated.address_a[0]
address_a[1] => altsyncram_lsc1:auto_generated.address_a[1]
address_a[2] => altsyncram_lsc1:auto_generated.address_a[2]
address_a[3] => altsyncram_lsc1:auto_generated.address_a[3]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_lsc1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_lsc1:auto_generated.q_a[0]
q_a[1] <= altsyncram_lsc1:auto_generated.q_a[1]
q_a[2] <= altsyncram_lsc1:auto_generated.q_a[2]
q_a[3] <= altsyncram_lsc1:auto_generated.q_a[3]
q_a[4] <= altsyncram_lsc1:auto_generated.q_a[4]
q_a[5] <= altsyncram_lsc1:auto_generated.q_a[5]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|juego_rondas|ram:inst12|altsyncram:altsyncram_component|altsyncram_lsc1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE


|juego_rondas|multiplexor1bit:inst15
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
data3 => LPM_MUX:LPM_MUX_component.DATA[3][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|juego_rondas|multiplexor1bit:inst15|LPM_MUX:LPM_MUX_component
data[0][0] => mux_33e:auto_generated.data[0]
data[1][0] => mux_33e:auto_generated.data[1]
data[2][0] => mux_33e:auto_generated.data[2]
data[3][0] => mux_33e:auto_generated.data[3]
sel[0] => mux_33e:auto_generated.sel[0]
sel[1] => mux_33e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_33e:auto_generated.result[0]


|juego_rondas|multiplexor1bit:inst15|LPM_MUX:LPM_MUX_component|mux_33e:auto_generated
data[0] => _.IN0
data[0] => _.IN0
data[1] => _.IN0
data[2] => _.IN1
data[2] => _.IN1
data[3] => _.IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0


|juego_rondas|generadorPulsos:inst34
reset => reg_fstate.state1.OUTPUTSELECT
reset => reg_fstate.state2.OUTPUTSELECT
reset => reg_fstate.state3.OUTPUTSELECT
reset => pulso.OUTPUTSELECT
clock => fstate~1.DATAIN
x => reg_fstate.DATAB
x => Selector1.IN2
x => Selector0.IN1
pulso <= pulso.DB_MAX_OUTPUT_PORT_TYPE


|juego_rondas|juegoPorRondas:inst25
reset => reg_fstate.rondas.OUTPUTSELECT
reset => reg_fstate.avisoRonda.OUTPUTSELECT
reset => reg_fstate.inputRonda.OUTPUTSELECT
reset => reg_fstate.avisoRonda2.OUTPUTSELECT
reset => reg_fstate.registrarGanadores.OUTPUTSELECT
reset => reg_fstate.inputRonda2.OUTPUTSELECT
reset => Q1.OUTPUTSELECT
reset => Q0.OUTPUTSELECT
reset => letra0.OUTPUTSELECT
clock => fstate~1.DATAIN
aceptar => Selector0.IN3
aceptar => reg_fstate.DATAB
aceptar => Selector2.IN3
aceptar => reg_fstate.DATAB
aceptar => reg_fstate.DATAB
aceptar => Selector0.IN1
aceptar => Selector1.IN1
aceptar => Selector2.IN1
Q1 <= Q1.DB_MAX_OUTPUT_PORT_TYPE
Q0 <= Q0.DB_MAX_OUTPUT_PORT_TYPE
letra0 <= letra0.DB_MAX_OUTPUT_PORT_TYPE
letra1 <= <GND>
letra2 <= <GND>
letra3 <= <GND>


|juego_rondas|decoder2_4:inst2
data[0] => lpm_decode:LPM_DECODE_component.data[0]
data[1] => lpm_decode:LPM_DECODE_component.data[1]
enable => lpm_decode:LPM_DECODE_component.enable
eq0 <= lpm_decode:LPM_DECODE_component.eq[0]
eq1 <= lpm_decode:LPM_DECODE_component.eq[1]
eq2 <= lpm_decode:LPM_DECODE_component.eq[2]
eq3 <= lpm_decode:LPM_DECODE_component.eq[3]


|juego_rondas|decoder2_4:inst2|lpm_decode:LPM_DECODE_component
data[0] => decode_uqf:auto_generated.data[0]
data[1] => decode_uqf:auto_generated.data[1]
enable => decode_uqf:auto_generated.enable
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
eq[0] <= decode_uqf:auto_generated.eq[0]
eq[1] <= decode_uqf:auto_generated.eq[1]
eq[2] <= decode_uqf:auto_generated.eq[2]
eq[3] <= decode_uqf:auto_generated.eq[3]


|juego_rondas|decoder2_4:inst2|lpm_decode:LPM_DECODE_component|decode_uqf:auto_generated
data[0] => w_anode14w[1].IN1
data[0] => w_anode1w[1].IN0
data[0] => w_anode22w[1].IN0
data[0] => w_anode30w[1].IN1
data[1] => w_anode14w[2].IN0
data[1] => w_anode1w[2].IN0
data[1] => w_anode22w[2].IN1
data[1] => w_anode30w[2].IN1
enable => w_anode14w[1].IN0
enable => w_anode1w[1].IN0
enable => w_anode22w[1].IN0
enable => w_anode30w[1].IN0
eq[0] <= w_anode1w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode14w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode22w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[3] <= w_anode30w[2].DB_MAX_OUTPUT_PORT_TYPE


|juego_rondas|mux2_4:inst14
data0x[0] => LPM_MUX:LPM_MUX_component.DATA[0][0]
data0x[1] => LPM_MUX:LPM_MUX_component.DATA[0][1]
data0x[2] => LPM_MUX:LPM_MUX_component.DATA[0][2]
data0x[3] => LPM_MUX:LPM_MUX_component.DATA[0][3]
data1x[0] => LPM_MUX:LPM_MUX_component.DATA[1][0]
data1x[1] => LPM_MUX:LPM_MUX_component.DATA[1][1]
data1x[2] => LPM_MUX:LPM_MUX_component.DATA[1][2]
data1x[3] => LPM_MUX:LPM_MUX_component.DATA[1][3]
data2x[0] => LPM_MUX:LPM_MUX_component.DATA[2][0]
data2x[1] => LPM_MUX:LPM_MUX_component.DATA[2][1]
data2x[2] => LPM_MUX:LPM_MUX_component.DATA[2][2]
data2x[3] => LPM_MUX:LPM_MUX_component.DATA[2][3]
data3x[0] => LPM_MUX:LPM_MUX_component.DATA[3][0]
data3x[1] => LPM_MUX:LPM_MUX_component.DATA[3][1]
data3x[2] => LPM_MUX:LPM_MUX_component.DATA[3][2]
data3x[3] => LPM_MUX:LPM_MUX_component.DATA[3][3]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result[0] <= LPM_MUX:LPM_MUX_component.RESULT[0]
result[1] <= LPM_MUX:LPM_MUX_component.RESULT[1]
result[2] <= LPM_MUX:LPM_MUX_component.RESULT[2]
result[3] <= LPM_MUX:LPM_MUX_component.RESULT[3]


|juego_rondas|mux2_4:inst14|LPM_MUX:LPM_MUX_component
data[0][0] => mux_63e:auto_generated.data[0]
data[0][1] => mux_63e:auto_generated.data[1]
data[0][2] => mux_63e:auto_generated.data[2]
data[0][3] => mux_63e:auto_generated.data[3]
data[1][0] => mux_63e:auto_generated.data[4]
data[1][1] => mux_63e:auto_generated.data[5]
data[1][2] => mux_63e:auto_generated.data[6]
data[1][3] => mux_63e:auto_generated.data[7]
data[2][0] => mux_63e:auto_generated.data[8]
data[2][1] => mux_63e:auto_generated.data[9]
data[2][2] => mux_63e:auto_generated.data[10]
data[2][3] => mux_63e:auto_generated.data[11]
data[3][0] => mux_63e:auto_generated.data[12]
data[3][1] => mux_63e:auto_generated.data[13]
data[3][2] => mux_63e:auto_generated.data[14]
data[3][3] => mux_63e:auto_generated.data[15]
sel[0] => mux_63e:auto_generated.sel[0]
sel[1] => mux_63e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_63e:auto_generated.result[0]
result[1] <= mux_63e:auto_generated.result[1]
result[2] <= mux_63e:auto_generated.result[2]
result[3] <= mux_63e:auto_generated.result[3]


|juego_rondas|mux2_4:inst14|LPM_MUX:LPM_MUX_component|mux_63e:auto_generated
data[0] => _.IN0
data[0] => _.IN0
data[1] => _.IN0
data[1] => _.IN0
data[2] => _.IN0
data[2] => _.IN0
data[3] => _.IN0
data[3] => _.IN0
data[4] => _.IN0
data[5] => _.IN0
data[6] => _.IN0
data[7] => _.IN0
data[8] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[11] => _.IN1
data[12] => _.IN0
data[13] => _.IN0
data[14] => _.IN0
data[15] => _.IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result_node[3].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0


|juego_rondas|constante4:inst17
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]
result[1] <= lpm_constant:LPM_CONSTANT_component.result[1]
result[2] <= lpm_constant:LPM_CONSTANT_component.result[2]
result[3] <= lpm_constant:LPM_CONSTANT_component.result[3]


|juego_rondas|constante4:inst17|lpm_constant:LPM_CONSTANT_component
result[0] <= <GND>
result[1] <= <GND>
result[2] <= <VCC>
result[3] <= <GND>


|juego_rondas|sumador7:inst16
datab[0] => lpm_add_sub:LPM_ADD_SUB_component.datab[0]
datab[1] => lpm_add_sub:LPM_ADD_SUB_component.datab[1]
datab[2] => lpm_add_sub:LPM_ADD_SUB_component.datab[2]
datab[3] => lpm_add_sub:LPM_ADD_SUB_component.datab[3]
result[0] <= lpm_add_sub:LPM_ADD_SUB_component.result[0]
result[1] <= lpm_add_sub:LPM_ADD_SUB_component.result[1]
result[2] <= lpm_add_sub:LPM_ADD_SUB_component.result[2]
result[3] <= lpm_add_sub:LPM_ADD_SUB_component.result[3]


|juego_rondas|sumador7:inst16|lpm_add_sub:LPM_ADD_SUB_component
dataa[0] => add_sub_snh:auto_generated.dataa[0]
dataa[1] => add_sub_snh:auto_generated.dataa[1]
dataa[2] => add_sub_snh:auto_generated.dataa[2]
dataa[3] => add_sub_snh:auto_generated.dataa[3]
datab[0] => add_sub_snh:auto_generated.datab[0]
datab[1] => add_sub_snh:auto_generated.datab[1]
datab[2] => add_sub_snh:auto_generated.datab[2]
datab[3] => add_sub_snh:auto_generated.datab[3]
cin => ~NO_FANOUT~
add_sub => ~NO_FANOUT~
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= add_sub_snh:auto_generated.result[0]
result[1] <= add_sub_snh:auto_generated.result[1]
result[2] <= add_sub_snh:auto_generated.result[2]
result[3] <= add_sub_snh:auto_generated.result[3]
cout <= <GND>
overflow <= <GND>


|juego_rondas|sumador7:inst16|lpm_add_sub:LPM_ADD_SUB_component|add_sub_snh:auto_generated
dataa[0] => op_1.IN6
dataa[1] => op_1.IN4
dataa[2] => op_1.IN2
dataa[3] => op_1.IN0
datab[0] => op_1.IN7
datab[1] => op_1.IN5
datab[2] => op_1.IN3
datab[3] => op_1.IN1
result[0] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= op_1.DB_MAX_OUTPUT_PORT_TYPE


|juego_rondas|contador3bits:inst6
aclr => lpm_counter:LPM_COUNTER_component.aclr
clock => lpm_counter:LPM_COUNTER_component.clock
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]


|juego_rondas|contador3bits:inst6|lpm_counter:LPM_COUNTER_component
clock => cntr_p2i:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => cntr_p2i:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_p2i:auto_generated.q[0]
q[1] <= cntr_p2i:auto_generated.q[1]
q[2] <= cntr_p2i:auto_generated.q[2]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|juego_rondas|contador3bits:inst6|lpm_counter:LPM_COUNTER_component|cntr_p2i:auto_generated
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT


|juego_rondas|comparadorPuntajes:inst21
dataa[0] => lpm_compare:LPM_COMPARE_component.dataa[0]
dataa[1] => lpm_compare:LPM_COMPARE_component.dataa[1]
dataa[2] => lpm_compare:LPM_COMPARE_component.dataa[2]
dataa[3] => lpm_compare:LPM_COMPARE_component.dataa[3]
dataa[4] => lpm_compare:LPM_COMPARE_component.dataa[4]
dataa[5] => lpm_compare:LPM_COMPARE_component.dataa[5]
datab[0] => lpm_compare:LPM_COMPARE_component.datab[0]
datab[1] => lpm_compare:LPM_COMPARE_component.datab[1]
datab[2] => lpm_compare:LPM_COMPARE_component.datab[2]
datab[3] => lpm_compare:LPM_COMPARE_component.datab[3]
datab[4] => lpm_compare:LPM_COMPARE_component.datab[4]
datab[5] => lpm_compare:LPM_COMPARE_component.datab[5]
ageb <= lpm_compare:LPM_COMPARE_component.ageb


|juego_rondas|comparadorPuntajes:inst21|lpm_compare:LPM_COMPARE_component
dataa[0] => cmpr_ikg:auto_generated.dataa[0]
dataa[1] => cmpr_ikg:auto_generated.dataa[1]
dataa[2] => cmpr_ikg:auto_generated.dataa[2]
dataa[3] => cmpr_ikg:auto_generated.dataa[3]
dataa[4] => cmpr_ikg:auto_generated.dataa[4]
dataa[5] => cmpr_ikg:auto_generated.dataa[5]
datab[0] => cmpr_ikg:auto_generated.datab[0]
datab[1] => cmpr_ikg:auto_generated.datab[1]
datab[2] => cmpr_ikg:auto_generated.datab[2]
datab[3] => cmpr_ikg:auto_generated.datab[3]
datab[4] => cmpr_ikg:auto_generated.datab[4]
datab[5] => cmpr_ikg:auto_generated.datab[5]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
alb <= <GND>
aeb <= <GND>
agb <= <GND>
aleb <= <GND>
aneb <= <GND>
ageb <= cmpr_ikg:auto_generated.ageb


|juego_rondas|comparadorPuntajes:inst21|lpm_compare:LPM_COMPARE_component|cmpr_ikg:auto_generated
ageb <= ageb.DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => _.IN0
dataa[0] => op_1.IN12
dataa[1] => _.IN0
dataa[1] => op_1.IN10
dataa[2] => _.IN0
dataa[2] => op_1.IN8
dataa[3] => _.IN0
dataa[3] => op_1.IN6
dataa[4] => _.IN0
dataa[4] => op_1.IN4
dataa[5] => _.IN0
dataa[5] => op_1.IN2
datab[0] => _.IN1
datab[0] => op_1.IN11
datab[1] => _.IN1
datab[1] => op_1.IN9
datab[2] => _.IN1
datab[2] => op_1.IN7
datab[3] => _.IN1
datab[3] => op_1.IN5
datab[4] => _.IN1
datab[4] => op_1.IN3
datab[5] => _.IN1
datab[5] => op_1.IN1


|juego_rondas|contador6bits:inst29
out[0] <= counter:inst.q[0]
out[1] <= counter:inst.q[1]
out[2] <= counter:inst.q[2]
out[3] <= counter:inst.q[3]
out[4] <= counter:inst.q[4]
out[5] <= counter:inst.q[5]
siguiente => inst5.IN0
enable => inst5.IN1
clr => counter:inst.aclr


|juego_rondas|contador6bits:inst29|counter:inst
aclr => lpm_counter:LPM_COUNTER_component.aclr
clock => lpm_counter:LPM_COUNTER_component.clock
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]


|juego_rondas|contador6bits:inst29|counter:inst|lpm_counter:LPM_COUNTER_component
clock => cntr_s2i:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => cntr_s2i:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_s2i:auto_generated.q[0]
q[1] <= cntr_s2i:auto_generated.q[1]
q[2] <= cntr_s2i:auto_generated.q[2]
q[3] <= cntr_s2i:auto_generated.q[3]
q[4] <= cntr_s2i:auto_generated.q[4]
q[5] <= cntr_s2i:auto_generated.q[5]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|juego_rondas|contador6bits:inst29|counter:inst|lpm_counter:LPM_COUNTER_component|cntr_s2i:auto_generated
aclr => counter_reg_bit1a[5].ACLR
aclr => counter_reg_bit1a[4].ACLR
aclr => counter_reg_bit1a[3].ACLR
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT


|juego_rondas|contador6bits:inst
out[0] <= counter:inst.q[0]
out[1] <= counter:inst.q[1]
out[2] <= counter:inst.q[2]
out[3] <= counter:inst.q[3]
out[4] <= counter:inst.q[4]
out[5] <= counter:inst.q[5]
siguiente => inst5.IN0
enable => inst5.IN1
clr => counter:inst.aclr


|juego_rondas|contador6bits:inst|counter:inst
aclr => lpm_counter:LPM_COUNTER_component.aclr
clock => lpm_counter:LPM_COUNTER_component.clock
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]


|juego_rondas|contador6bits:inst|counter:inst|lpm_counter:LPM_COUNTER_component
clock => cntr_s2i:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => cntr_s2i:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_s2i:auto_generated.q[0]
q[1] <= cntr_s2i:auto_generated.q[1]
q[2] <= cntr_s2i:auto_generated.q[2]
q[3] <= cntr_s2i:auto_generated.q[3]
q[4] <= cntr_s2i:auto_generated.q[4]
q[5] <= cntr_s2i:auto_generated.q[5]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|juego_rondas|contador6bits:inst|counter:inst|lpm_counter:LPM_COUNTER_component|cntr_s2i:auto_generated
aclr => counter_reg_bit1a[5].ACLR
aclr => counter_reg_bit1a[4].ACLR
aclr => counter_reg_bit1a[3].ACLR
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT


|juego_rondas|multiplexor6bits:inst13
data0x[0] => LPM_MUX:LPM_MUX_component.DATA[0][0]
data0x[1] => LPM_MUX:LPM_MUX_component.DATA[0][1]
data0x[2] => LPM_MUX:LPM_MUX_component.DATA[0][2]
data0x[3] => LPM_MUX:LPM_MUX_component.DATA[0][3]
data0x[4] => LPM_MUX:LPM_MUX_component.DATA[0][4]
data0x[5] => LPM_MUX:LPM_MUX_component.DATA[0][5]
data1x[0] => LPM_MUX:LPM_MUX_component.DATA[1][0]
data1x[1] => LPM_MUX:LPM_MUX_component.DATA[1][1]
data1x[2] => LPM_MUX:LPM_MUX_component.DATA[1][2]
data1x[3] => LPM_MUX:LPM_MUX_component.DATA[1][3]
data1x[4] => LPM_MUX:LPM_MUX_component.DATA[1][4]
data1x[5] => LPM_MUX:LPM_MUX_component.DATA[1][5]
data2x[0] => LPM_MUX:LPM_MUX_component.DATA[2][0]
data2x[1] => LPM_MUX:LPM_MUX_component.DATA[2][1]
data2x[2] => LPM_MUX:LPM_MUX_component.DATA[2][2]
data2x[3] => LPM_MUX:LPM_MUX_component.DATA[2][3]
data2x[4] => LPM_MUX:LPM_MUX_component.DATA[2][4]
data2x[5] => LPM_MUX:LPM_MUX_component.DATA[2][5]
data3x[0] => LPM_MUX:LPM_MUX_component.DATA[3][0]
data3x[1] => LPM_MUX:LPM_MUX_component.DATA[3][1]
data3x[2] => LPM_MUX:LPM_MUX_component.DATA[3][2]
data3x[3] => LPM_MUX:LPM_MUX_component.DATA[3][3]
data3x[4] => LPM_MUX:LPM_MUX_component.DATA[3][4]
data3x[5] => LPM_MUX:LPM_MUX_component.DATA[3][5]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result[0] <= LPM_MUX:LPM_MUX_component.RESULT[0]
result[1] <= LPM_MUX:LPM_MUX_component.RESULT[1]
result[2] <= LPM_MUX:LPM_MUX_component.RESULT[2]
result[3] <= LPM_MUX:LPM_MUX_component.RESULT[3]
result[4] <= LPM_MUX:LPM_MUX_component.RESULT[4]
result[5] <= LPM_MUX:LPM_MUX_component.RESULT[5]


|juego_rondas|multiplexor6bits:inst13|LPM_MUX:LPM_MUX_component
data[0][0] => mux_83e:auto_generated.data[0]
data[0][1] => mux_83e:auto_generated.data[1]
data[0][2] => mux_83e:auto_generated.data[2]
data[0][3] => mux_83e:auto_generated.data[3]
data[0][4] => mux_83e:auto_generated.data[4]
data[0][5] => mux_83e:auto_generated.data[5]
data[1][0] => mux_83e:auto_generated.data[6]
data[1][1] => mux_83e:auto_generated.data[7]
data[1][2] => mux_83e:auto_generated.data[8]
data[1][3] => mux_83e:auto_generated.data[9]
data[1][4] => mux_83e:auto_generated.data[10]
data[1][5] => mux_83e:auto_generated.data[11]
data[2][0] => mux_83e:auto_generated.data[12]
data[2][1] => mux_83e:auto_generated.data[13]
data[2][2] => mux_83e:auto_generated.data[14]
data[2][3] => mux_83e:auto_generated.data[15]
data[2][4] => mux_83e:auto_generated.data[16]
data[2][5] => mux_83e:auto_generated.data[17]
data[3][0] => mux_83e:auto_generated.data[18]
data[3][1] => mux_83e:auto_generated.data[19]
data[3][2] => mux_83e:auto_generated.data[20]
data[3][3] => mux_83e:auto_generated.data[21]
data[3][4] => mux_83e:auto_generated.data[22]
data[3][5] => mux_83e:auto_generated.data[23]
sel[0] => mux_83e:auto_generated.sel[0]
sel[1] => mux_83e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_83e:auto_generated.result[0]
result[1] <= mux_83e:auto_generated.result[1]
result[2] <= mux_83e:auto_generated.result[2]
result[3] <= mux_83e:auto_generated.result[3]
result[4] <= mux_83e:auto_generated.result[4]
result[5] <= mux_83e:auto_generated.result[5]


|juego_rondas|multiplexor6bits:inst13|LPM_MUX:LPM_MUX_component|mux_83e:auto_generated
data[0] => _.IN0
data[0] => _.IN0
data[1] => _.IN0
data[1] => _.IN0
data[2] => _.IN0
data[2] => _.IN0
data[3] => _.IN0
data[3] => _.IN0
data[4] => _.IN0
data[4] => _.IN0
data[5] => _.IN0
data[5] => _.IN0
data[6] => _.IN0
data[7] => _.IN0
data[8] => _.IN0
data[9] => _.IN0
data[10] => _.IN0
data[11] => _.IN0
data[12] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
data[15] => _.IN1
data[16] => _.IN1
data[16] => _.IN1
data[17] => _.IN1
data[17] => _.IN1
data[18] => _.IN0
data[19] => _.IN0
data[20] => _.IN0
data[21] => _.IN0
data[22] => _.IN0
data[23] => _.IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result_node[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result_node[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result_node[5].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0


|juego_rondas|sumador6_bits:inst11
dataa[0] => lpm_add_sub:LPM_ADD_SUB_component.dataa[0]
dataa[1] => lpm_add_sub:LPM_ADD_SUB_component.dataa[1]
dataa[2] => lpm_add_sub:LPM_ADD_SUB_component.dataa[2]
dataa[3] => lpm_add_sub:LPM_ADD_SUB_component.dataa[3]
dataa[4] => lpm_add_sub:LPM_ADD_SUB_component.dataa[4]
dataa[5] => lpm_add_sub:LPM_ADD_SUB_component.dataa[5]
datab[0] => lpm_add_sub:LPM_ADD_SUB_component.datab[0]
datab[1] => lpm_add_sub:LPM_ADD_SUB_component.datab[1]
datab[2] => lpm_add_sub:LPM_ADD_SUB_component.datab[2]
datab[3] => lpm_add_sub:LPM_ADD_SUB_component.datab[3]
datab[4] => lpm_add_sub:LPM_ADD_SUB_component.datab[4]
datab[5] => lpm_add_sub:LPM_ADD_SUB_component.datab[5]
result[0] <= lpm_add_sub:LPM_ADD_SUB_component.result[0]
result[1] <= lpm_add_sub:LPM_ADD_SUB_component.result[1]
result[2] <= lpm_add_sub:LPM_ADD_SUB_component.result[2]
result[3] <= lpm_add_sub:LPM_ADD_SUB_component.result[3]
result[4] <= lpm_add_sub:LPM_ADD_SUB_component.result[4]
result[5] <= lpm_add_sub:LPM_ADD_SUB_component.result[5]


|juego_rondas|sumador6_bits:inst11|lpm_add_sub:LPM_ADD_SUB_component
dataa[0] => add_sub_akh:auto_generated.dataa[0]
dataa[1] => add_sub_akh:auto_generated.dataa[1]
dataa[2] => add_sub_akh:auto_generated.dataa[2]
dataa[3] => add_sub_akh:auto_generated.dataa[3]
dataa[4] => add_sub_akh:auto_generated.dataa[4]
dataa[5] => add_sub_akh:auto_generated.dataa[5]
datab[0] => add_sub_akh:auto_generated.datab[0]
datab[1] => add_sub_akh:auto_generated.datab[1]
datab[2] => add_sub_akh:auto_generated.datab[2]
datab[3] => add_sub_akh:auto_generated.datab[3]
datab[4] => add_sub_akh:auto_generated.datab[4]
datab[5] => add_sub_akh:auto_generated.datab[5]
cin => ~NO_FANOUT~
add_sub => ~NO_FANOUT~
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= add_sub_akh:auto_generated.result[0]
result[1] <= add_sub_akh:auto_generated.result[1]
result[2] <= add_sub_akh:auto_generated.result[2]
result[3] <= add_sub_akh:auto_generated.result[3]
result[4] <= add_sub_akh:auto_generated.result[4]
result[5] <= add_sub_akh:auto_generated.result[5]
cout <= <GND>
overflow <= <GND>


|juego_rondas|sumador6_bits:inst11|lpm_add_sub:LPM_ADD_SUB_component|add_sub_akh:auto_generated
dataa[0] => op_1.IN10
dataa[1] => op_1.IN8
dataa[2] => op_1.IN6
dataa[3] => op_1.IN4
dataa[4] => op_1.IN2
dataa[5] => op_1.IN0
datab[0] => op_1.IN11
datab[1] => op_1.IN9
datab[2] => op_1.IN7
datab[3] => op_1.IN5
datab[4] => op_1.IN3
datab[5] => op_1.IN1
result[0] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= op_1.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= op_1.DB_MAX_OUTPUT_PORT_TYPE


|juego_rondas|generadorPulsos:inst27
reset => reg_fstate.state1.OUTPUTSELECT
reset => reg_fstate.state2.OUTPUTSELECT
reset => reg_fstate.state3.OUTPUTSELECT
reset => pulso.OUTPUTSELECT
clock => fstate~1.DATAIN
x => reg_fstate.DATAB
x => Selector1.IN2
x => Selector0.IN1
pulso <= pulso.DB_MAX_OUTPUT_PORT_TYPE


|juego_rondas|multiplexor6bits:inst8
data0x[0] => LPM_MUX:LPM_MUX_component.DATA[0][0]
data0x[1] => LPM_MUX:LPM_MUX_component.DATA[0][1]
data0x[2] => LPM_MUX:LPM_MUX_component.DATA[0][2]
data0x[3] => LPM_MUX:LPM_MUX_component.DATA[0][3]
data0x[4] => LPM_MUX:LPM_MUX_component.DATA[0][4]
data0x[5] => LPM_MUX:LPM_MUX_component.DATA[0][5]
data1x[0] => LPM_MUX:LPM_MUX_component.DATA[1][0]
data1x[1] => LPM_MUX:LPM_MUX_component.DATA[1][1]
data1x[2] => LPM_MUX:LPM_MUX_component.DATA[1][2]
data1x[3] => LPM_MUX:LPM_MUX_component.DATA[1][3]
data1x[4] => LPM_MUX:LPM_MUX_component.DATA[1][4]
data1x[5] => LPM_MUX:LPM_MUX_component.DATA[1][5]
data2x[0] => LPM_MUX:LPM_MUX_component.DATA[2][0]
data2x[1] => LPM_MUX:LPM_MUX_component.DATA[2][1]
data2x[2] => LPM_MUX:LPM_MUX_component.DATA[2][2]
data2x[3] => LPM_MUX:LPM_MUX_component.DATA[2][3]
data2x[4] => LPM_MUX:LPM_MUX_component.DATA[2][4]
data2x[5] => LPM_MUX:LPM_MUX_component.DATA[2][5]
data3x[0] => LPM_MUX:LPM_MUX_component.DATA[3][0]
data3x[1] => LPM_MUX:LPM_MUX_component.DATA[3][1]
data3x[2] => LPM_MUX:LPM_MUX_component.DATA[3][2]
data3x[3] => LPM_MUX:LPM_MUX_component.DATA[3][3]
data3x[4] => LPM_MUX:LPM_MUX_component.DATA[3][4]
data3x[5] => LPM_MUX:LPM_MUX_component.DATA[3][5]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result[0] <= LPM_MUX:LPM_MUX_component.RESULT[0]
result[1] <= LPM_MUX:LPM_MUX_component.RESULT[1]
result[2] <= LPM_MUX:LPM_MUX_component.RESULT[2]
result[3] <= LPM_MUX:LPM_MUX_component.RESULT[3]
result[4] <= LPM_MUX:LPM_MUX_component.RESULT[4]
result[5] <= LPM_MUX:LPM_MUX_component.RESULT[5]


|juego_rondas|multiplexor6bits:inst8|LPM_MUX:LPM_MUX_component
data[0][0] => mux_83e:auto_generated.data[0]
data[0][1] => mux_83e:auto_generated.data[1]
data[0][2] => mux_83e:auto_generated.data[2]
data[0][3] => mux_83e:auto_generated.data[3]
data[0][4] => mux_83e:auto_generated.data[4]
data[0][5] => mux_83e:auto_generated.data[5]
data[1][0] => mux_83e:auto_generated.data[6]
data[1][1] => mux_83e:auto_generated.data[7]
data[1][2] => mux_83e:auto_generated.data[8]
data[1][3] => mux_83e:auto_generated.data[9]
data[1][4] => mux_83e:auto_generated.data[10]
data[1][5] => mux_83e:auto_generated.data[11]
data[2][0] => mux_83e:auto_generated.data[12]
data[2][1] => mux_83e:auto_generated.data[13]
data[2][2] => mux_83e:auto_generated.data[14]
data[2][3] => mux_83e:auto_generated.data[15]
data[2][4] => mux_83e:auto_generated.data[16]
data[2][5] => mux_83e:auto_generated.data[17]
data[3][0] => mux_83e:auto_generated.data[18]
data[3][1] => mux_83e:auto_generated.data[19]
data[3][2] => mux_83e:auto_generated.data[20]
data[3][3] => mux_83e:auto_generated.data[21]
data[3][4] => mux_83e:auto_generated.data[22]
data[3][5] => mux_83e:auto_generated.data[23]
sel[0] => mux_83e:auto_generated.sel[0]
sel[1] => mux_83e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_83e:auto_generated.result[0]
result[1] <= mux_83e:auto_generated.result[1]
result[2] <= mux_83e:auto_generated.result[2]
result[3] <= mux_83e:auto_generated.result[3]
result[4] <= mux_83e:auto_generated.result[4]
result[5] <= mux_83e:auto_generated.result[5]


|juego_rondas|multiplexor6bits:inst8|LPM_MUX:LPM_MUX_component|mux_83e:auto_generated
data[0] => _.IN0
data[0] => _.IN0
data[1] => _.IN0
data[1] => _.IN0
data[2] => _.IN0
data[2] => _.IN0
data[3] => _.IN0
data[3] => _.IN0
data[4] => _.IN0
data[4] => _.IN0
data[5] => _.IN0
data[5] => _.IN0
data[6] => _.IN0
data[7] => _.IN0
data[8] => _.IN0
data[9] => _.IN0
data[10] => _.IN0
data[11] => _.IN0
data[12] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
data[15] => _.IN1
data[16] => _.IN1
data[16] => _.IN1
data[17] => _.IN1
data[17] => _.IN1
data[18] => _.IN0
data[19] => _.IN0
data[20] => _.IN0
data[21] => _.IN0
data[22] => _.IN0
data[23] => _.IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result_node[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result_node[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result_node[5].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0


|juego_rondas|mux2_4:inst7
data0x[0] => LPM_MUX:LPM_MUX_component.DATA[0][0]
data0x[1] => LPM_MUX:LPM_MUX_component.DATA[0][1]
data0x[2] => LPM_MUX:LPM_MUX_component.DATA[0][2]
data0x[3] => LPM_MUX:LPM_MUX_component.DATA[0][3]
data1x[0] => LPM_MUX:LPM_MUX_component.DATA[1][0]
data1x[1] => LPM_MUX:LPM_MUX_component.DATA[1][1]
data1x[2] => LPM_MUX:LPM_MUX_component.DATA[1][2]
data1x[3] => LPM_MUX:LPM_MUX_component.DATA[1][3]
data2x[0] => LPM_MUX:LPM_MUX_component.DATA[2][0]
data2x[1] => LPM_MUX:LPM_MUX_component.DATA[2][1]
data2x[2] => LPM_MUX:LPM_MUX_component.DATA[2][2]
data2x[3] => LPM_MUX:LPM_MUX_component.DATA[2][3]
data3x[0] => LPM_MUX:LPM_MUX_component.DATA[3][0]
data3x[1] => LPM_MUX:LPM_MUX_component.DATA[3][1]
data3x[2] => LPM_MUX:LPM_MUX_component.DATA[3][2]
data3x[3] => LPM_MUX:LPM_MUX_component.DATA[3][3]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result[0] <= LPM_MUX:LPM_MUX_component.RESULT[0]
result[1] <= LPM_MUX:LPM_MUX_component.RESULT[1]
result[2] <= LPM_MUX:LPM_MUX_component.RESULT[2]
result[3] <= LPM_MUX:LPM_MUX_component.RESULT[3]


|juego_rondas|mux2_4:inst7|LPM_MUX:LPM_MUX_component
data[0][0] => mux_63e:auto_generated.data[0]
data[0][1] => mux_63e:auto_generated.data[1]
data[0][2] => mux_63e:auto_generated.data[2]
data[0][3] => mux_63e:auto_generated.data[3]
data[1][0] => mux_63e:auto_generated.data[4]
data[1][1] => mux_63e:auto_generated.data[5]
data[1][2] => mux_63e:auto_generated.data[6]
data[1][3] => mux_63e:auto_generated.data[7]
data[2][0] => mux_63e:auto_generated.data[8]
data[2][1] => mux_63e:auto_generated.data[9]
data[2][2] => mux_63e:auto_generated.data[10]
data[2][3] => mux_63e:auto_generated.data[11]
data[3][0] => mux_63e:auto_generated.data[12]
data[3][1] => mux_63e:auto_generated.data[13]
data[3][2] => mux_63e:auto_generated.data[14]
data[3][3] => mux_63e:auto_generated.data[15]
sel[0] => mux_63e:auto_generated.sel[0]
sel[1] => mux_63e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_63e:auto_generated.result[0]
result[1] <= mux_63e:auto_generated.result[1]
result[2] <= mux_63e:auto_generated.result[2]
result[3] <= mux_63e:auto_generated.result[3]


|juego_rondas|mux2_4:inst7|LPM_MUX:LPM_MUX_component|mux_63e:auto_generated
data[0] => _.IN0
data[0] => _.IN0
data[1] => _.IN0
data[1] => _.IN0
data[2] => _.IN0
data[2] => _.IN0
data[3] => _.IN0
data[3] => _.IN0
data[4] => _.IN0
data[5] => _.IN0
data[6] => _.IN0
data[7] => _.IN0
data[8] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[11] => _.IN1
data[12] => _.IN0
data[13] => _.IN0
data[14] => _.IN0
data[15] => _.IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result_node[3].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0


|juego_rondas|constante8:inst37
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]
result[1] <= lpm_constant:LPM_CONSTANT_component.result[1]
result[2] <= lpm_constant:LPM_CONSTANT_component.result[2]
result[3] <= lpm_constant:LPM_CONSTANT_component.result[3]


|juego_rondas|constante8:inst37|lpm_constant:LPM_CONSTANT_component
result[0] <= <GND>
result[1] <= <GND>
result[2] <= <GND>
result[3] <= <VCC>


|juego_rondas|constante3:inst35
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]
result[1] <= lpm_constant:LPM_CONSTANT_component.result[1]
result[2] <= lpm_constant:LPM_CONSTANT_component.result[2]
result[3] <= lpm_constant:LPM_CONSTANT_component.result[3]


|juego_rondas|constante3:inst35|lpm_constant:LPM_CONSTANT_component
result[0] <= <VCC>
result[1] <= <VCC>
result[2] <= <GND>
result[3] <= <GND>


|juego_rondas|constante10:inst26
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]
result[1] <= lpm_constant:LPM_CONSTANT_component.result[1]
result[2] <= lpm_constant:LPM_CONSTANT_component.result[2]
result[3] <= lpm_constant:LPM_CONSTANT_component.result[3]


|juego_rondas|constante10:inst26|lpm_constant:LPM_CONSTANT_component
result[0] <= <GND>
result[1] <= <VCC>
result[2] <= <GND>
result[3] <= <VCC>


